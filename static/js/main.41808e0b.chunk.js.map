{"version":3,"sources":["components/AddFavorites.js","components/Movie.js","components/RemoveFavourites.js","components/MovieList.js","components/MovieListHeading.js","components/SearchBox.js","App.js","reportWebVitals.js","index.js"],"names":["AddFavorites","className","xmlns","width","height","fill","viewBox","d","Movie","state","open","movieDetails","handleClose","setState","handleOpen","console","log","props","movie","getMovieDetails","imdbID","movieId","a","url","fetch","response","json","responseJson","dialog","background","position","this","Title","Year","Poster","Rated","Language","Genre","Writer","Director","Actors","BoxOffice","Episode","Season","Plot","Runtime","Awards","Tooltip","title","IconButton","onClick","color","ExpandMore","Dialog","onClose","fullWidth","DialogTitle","style","alignContent","padding","Close","DialogContent","Grid","container","item","sm","src","alt","Typography","variant","href","target","rel","Component","RemoveFavourites","MovieList","movies","map","index","fav","handleFavouriteClick","handleremoveFavouriteClick","MovieListHeading","heading","SearchBox","type","name","placeholder","value","SearchValue","onChange","event","setSearchValue","App","useState","setMovies","favourites","setFavourites","getMovies","Search","useEffect","favouriteMovies","JSON","parse","localStorage","getItem","saveToLocalStorage","items","setItem","stringify","renderMovies","newFavoriteList","renderFavMovies","newFavourteList","filter","favorite","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41808e0b.chunk.js","sourcesContent":["import React, { Fragment } from 'react'\r\n\r\nconst AddFavorites = () => {\r\n    return (\r\n        <Fragment>\r\n            <span className=\"mr-2\" >Add to Favourites</span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"white\" className=\"bi bi-star\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M2.866 14.85c-.078.444.36.791.746.593l4.39-2.256 4.389 2.256c.386.198.824-.149.746-.592l-.83-4.73 3.523-3.356c.329-.314.158-.888-.283-.95l-4.898-.696L8.465.792a.513.513 0 0 0-.927 0L5.354 5.12l-4.898.696c-.441.062-.612.636-.283.95l3.523 3.356-.83 4.73zm4.905-2.767l-3.686 1.894.694-3.957a.565.565 0 0 0-.163-.505L1.71 6.745l4.052-.576a.525.525 0 0 0 .393-.288l1.847-3.658 1.846 3.658a.525.525 0 0 0 .393.288l4.052.575-2.906 2.77a.564.564 0 0 0-.163.506l.694 3.957-3.686-1.894a.503.503 0 0 0-.461 0z\" />\r\n            </svg>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default AddFavorites\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Dialog, DialogContent, DialogTitle, Grid, IconButton, Tooltip, Typography } from '@material-ui/core'\r\nimport { Close, ExpandMore } from '@material-ui/icons'\r\n\r\n\r\n\r\nclass Movie extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        movieDetails: {},\r\n\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n        console.log(this.props.movie);\r\n        this.getMovieDetails(this.props.movie.imdbID);\r\n\r\n    }\r\n    getMovieDetails = async (movieId) => {\r\n        const url = `https://www.omdbapi.com/?i=${movieId}&apikey=f441d06c`;\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json();\r\n        this.setState({ movieDetails: responseJson });\r\n        console.log(this.state);\r\n    }\r\n    dialog = ({\r\n        background: \"black\",\r\n        position: \"relative\",\r\n    })\r\n    render() {\r\n        const { Title, Year, Poster } = this.props.movie;\r\n        const {\r\n\r\n            Rated,\r\n            Language,\r\n            Genre,\r\n            Writer,\r\n            Director,\r\n            Actors,\r\n            BoxOffice,\r\n            Episode,\r\n            Season,\r\n            Plot,\r\n            Runtime,\r\n            Awards,\r\n        } = this.state.movieDetails;\r\n\r\n        return (\r\n            <Fragment >\r\n                <Tooltip title=\"movie details\">\r\n                    <IconButton onClick={this.handleOpen} color=\"primary\">\r\n                        <ExpandMore></ExpandMore>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth >\r\n                    <DialogTitle title=\"Movies Details\" style={{ alignContent: 'center', padding: '20', color: \"white\", background: \"rgba(0,0,0,0.8)\" }}>\r\n                        Movie Details\r\n                        <Tooltip title=\"close\">\r\n                            <IconButton onClick={this.handleClose} className=\"float-right\" color=\"secondary\">\r\n                                <Close></Close>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </DialogTitle>\r\n                    <DialogContent style={{ alignContent: 'center', padding: '20', color: \"white\", background: \"rgba(0,0,0,0.8)\" }} >\r\n                        <Grid container>\r\n                            <Grid item sm={5}>\r\n                                <img src={Poster} alt=\"movie\" width={200} height={300}></img>\r\n\r\n                            </Grid>\r\n                            <Grid item sm={7}>\r\n                                <Typography variant=\"h5\" color=\"primary\"> <a href={`https://www.google.com/search?q=${Title}`} target=\"_blank\" rel=\"noreferrer\">{Title}</a></Typography>\r\n                                <Typography variant=\"body1\">{Year}</Typography>\r\n                                {Genre ? (<Typography variant=\"body1\">{Genre}</Typography>) : (null)}\r\n                                {Director ? (<Typography variant=\"body1\">Director: {Director}</Typography>) : (null)}\r\n                                {Language ? (<Typography variant=\"body1\">Language: {Language}</Typography>) : (null)}\r\n                                {Rated ? (<Typography variant=\"body1\">Rated: {Rated}</Typography>) : (null)}\r\n                                {Episode ? (<Typography variant=\"body1\">Episode: {Episode}</Typography>) : (null)}\r\n                                {Season ? (<Typography variant=\"body1\">Season: {Season}</Typography>) : (null)}\r\n                                {Actors ? (<Typography variant=\"body1\">Actors: {Actors}</Typography>) : (null)}\r\n                                {Runtime ? (<Typography variant=\"body1\">Duration: {Runtime}</Typography>) : (null)}\r\n                                <Typography variant=\"body1\">Awards: {Awards}</Typography>\r\n                                {BoxOffice ? (<Typography variant=\"body1\">Earnings: {BoxOffice}</Typography>) : (null)}\r\n\r\n                            </Grid>\r\n                            <br></br>\r\n                            <Typography variant=\"body2\">Writer: {Writer}</Typography>\r\n                            <Typography variant=\"body2\">Plot: {Plot}</Typography>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie\r\n","import React, { Fragment } from 'react'\r\n\r\nconst RemoveFavourites = () => {\r\n    return (\r\n        <Fragment>\r\n            <span className=\"mr-2\" >Remove Favourites </span>\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"16\" height=\"16\" fill=\"currentColor\" className=\"bi bi-star-fill\" viewBox=\"0 0 16 16\">\r\n                <path d=\"M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.283.95l-3.523 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z\" />\r\n            </svg>\r\n\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nexport default RemoveFavourites\r\n","\r\nimport React, { Fragment } from 'react'\r\nimport AddFavorites from './AddFavorites'\r\nimport Movie from './Movie'\r\nimport RemoveFavourites from './RemoveFavourites'\r\n\r\nconst MovieList = (props) => {\r\n    // console.log(props.movies);\r\n\r\n\r\n    return (\r\n\r\n        <Fragment>\r\n            {props.movies.map((movie, index) => \r\n                movie === null ? (<p>no data available</p>) : (<div key={movie.imdbID} className=\"image-container d-flex justify-content-start m-3 \">\r\n                    <img key={movie.Poster} src={movie.Poster} alt=\"movie name\" height=\"240px\" width=\"160px\"></img>\r\n\r\n                    {props.fav ? (<div onClick={() => props.handleFavouriteClick(movie)} className=\"overlay d-flex align-items-center justify-content-center\">\r\n                        <AddFavorites></AddFavorites>\r\n                    </div>) : (<div onClick={() => props.handleremoveFavouriteClick(movie)} className=\"overlay d-flex align-items-center justify-content-center\">\r\n                        <RemoveFavourites></RemoveFavourites>\r\n                    </div>\r\n                        )\r\n\r\n                        \r\n\r\n\r\n                    }\r\n\r\n                    <span className=\"overlay fixed-bottom \"><Movie movie={movie}></Movie></span>\r\n\r\n\r\n\r\n\r\n\r\n                </div>\r\n\r\n                )\r\n\r\n            )}\r\n        </Fragment >\r\n    )\r\n}\r\n\r\nexport default MovieList\r\n","import React from 'react'\r\n\r\nconst MovieListHeading = (props) => {\r\n    return (\r\n        <div className=\"col\">\r\n            <h4>{props.heading}</h4>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MovieListHeading\r\n","import React from 'react'\r\n\r\nconst SearchBox = (props) => {\r\n    return (\r\n        <div className=\"col col-sm-4\">\r\n            <input className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"moviesearch\"\r\n                placeholder=\"search movies\"\r\n                value={props.SearchValue}\r\n                onChange= {(event)=> props.setSearchValue(event.target.value)}\r\n                />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport { useState, useEffect } from 'react';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\n\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [SearchValue, setSearchValue] = useState('');\n  const [favourites, setFavourites] = useState([{\n    \"Title\": \"Harry Potter and the Deathly Hallows: Part 2\",\n    \"Year\": \"2011\",\n    \"imdbID\": \"tt1201607\",\n    \"Type\": \"movie\",\n    \"Poster\": \"https://m.media-amazon.com/images/M/MV5BMGVmMWNiMDktYjQ0Mi00MWIxLTk0N2UtN2ZlYTdkN2IzNDNlXkEyXkFqcGdeQXVyODE5NzE3OTE@._V1_SX300.jpg\"\n  }]);\n\n  const getMovies = async (SearchValue) => {\n\n    const url = `https://www.omdbapi.com/?s=${SearchValue}&apikey=f441d06c`;\n\n    const response = await fetch(url);\n    const responseJson = await response.json();\n    // console.log(responseJson);\n    if (responseJson.Search)\n      setMovies(responseJson.Search);\n\n\n\n\n  }\n\n  useEffect(() => {\n\n    return () => {\n      getMovies(SearchValue);\n    }\n  }, [SearchValue]);\n\n  useEffect(() => {\n    const favouriteMovies = JSON.parse(localStorage.getItem('favourite-movie'));\n    setFavourites(favouriteMovies);\n  }, [])\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem('favourite-movie', JSON.stringify(items));\n  }\n  const addFavoriteMovie = (movie) => {\n    if (favourites === []) {\n      const newFavoriteList = [movie];\n      setFavourites(newFavoriteList);\n      saveToLocalStorage(newFavoriteList)\n    }\n    else {\n      const newFavoriteList = [movie, ...favourites];\n      setFavourites(newFavoriteList);\n      saveToLocalStorage(newFavoriteList);\n    }\n\n    // if (!favourites.includes(movie)) {\n    //   const newFavoriteList = [...favourites, movie];\n    //   setFavourites(newFavoriteList);\n    //   saveToLocalStorage(newFavoriteList);\n    // }\n\n  }\n  const removeFavouriteMovie = (movie) => {\n    const newFavourteList = favourites.filter((favorite) => favorite.imdbID !== movie.imdbID);\n    setFavourites(newFavourteList);\n    saveToLocalStorage(newFavourteList);\n  }\n\n  const renderMovies = !movies ? (<p>No movies </p>) : (<MovieList movies={movies} handleFavouriteClick={addFavoriteMovie} fav={true} ></MovieList>);\n  const renderFavMovies = !favourites ? (<p>No movies </p>) : (<MovieList movies={favourites} handleremoveFavouriteClick={removeFavouriteMovie} fav={false} ></MovieList>);\n  return (\n    <div className=\"container-fluid movie-app\">\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <MovieListHeading heading=\"Movies\"></MovieListHeading>\n        <SearchBox SearchValue={SearchValue} setSearchValue={setSearchValue}></SearchBox>\n      </div>\n      <div className=\"row\">\n        {renderMovies}\n        {/* <Movie></Movie> */}\n      </div>\n\n      <div className=\"row d-flex align-items-center\">\n        <MovieListHeading heading=\"Favourites\"></MovieListHeading>\n\n      </div>\n      <div className=\"row\">\n        {renderFavMovies}\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}