[{"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\index.js":"1","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\App.js":"2","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\reportWebVitals.js":"3","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\MovieList.js":"4","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\Movie.js":"5","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\MovieListHeading.js":"6","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\SearchBox.js":"7","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\AddFavorites.js":"8","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\RemoveFavourites.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":2399,"mtime":1609966338628,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":1286,"mtime":1609966029071,"results":"14","hashOfConfig":"11"},{"size":4513,"mtime":1609966222743,"results":"15","hashOfConfig":"11"},{"size":212,"mtime":1609965982140,"results":"16","hashOfConfig":"11"},{"size":467,"mtime":1609828266186,"results":"17","hashOfConfig":"11"},{"size":915,"mtime":1609950416327,"results":"18","hashOfConfig":"11"},{"size":688,"mtime":1609950748392,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"usrbie",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\index.js",[],["42","43"],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\App.js",["44"],"\nimport './App.css';\nimport MovieList from './components/MovieList';\nimport { useState, useEffect } from 'react';\n\nimport \"bootstrap/dist/css/bootstrap.min.css\"\nimport MovieListHeading from './components/MovieListHeading';\nimport SearchBox from './components/SearchBox';\nimport Movie from './components/Movie';\n\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [SearchValue, setSearchValue] = useState('');\n  const [favourites, setFavourites] = useState([]);\n\n  const getMovies = async (SearchValue) => {\n\n    const url = `http://www.omdbapi.com/?s=${SearchValue}&apikey=f441d06c`;\n\n    const response = await fetch(url);\n    const responseJson = await response.json();\n    // console.log(responseJson);\n    if (responseJson.Search)\n      setMovies(responseJson.Search);\n\n\n\n\n  }\n\n  useEffect(() => {\n\n    return () => {\n      getMovies(SearchValue);\n    }\n  }, [SearchValue]);\n\n  useEffect(() => {\n    const favouriteMovies = JSON.parse(localStorage.getItem('favourite-movie'));\n    setFavourites(favouriteMovies);\n  }, [])\n\n  const saveToLocalStorage = (items) => {\n    localStorage.setItem('favourite-movie', JSON.stringify(items));\n  }\n  const addFavoriteMovie = (movie) => {\n    if (!favourites.includes(movie)) {\n      const newFavoriteList = [...favourites, movie];\n      setFavourites(newFavoriteList);\n      saveToLocalStorage(newFavoriteList);\n    }\n\n  }\n  const removeFavouriteMovie = (movie) => {\n    const newFavourteList = favourites.filter((favorite) => favorite.imdbID !== movie.imdbID);\n    setFavourites(newFavourteList);\n    saveToLocalStorage(newFavourteList);\n  }\n  return (\n    <div className=\"container-fluid movie-app\">\n      <div className=\"row d-flex align-items-center mt-4 mb-4\">\n        <MovieListHeading heading=\"Movies\"></MovieListHeading>\n        <SearchBox SearchValue={SearchValue} setSearchValue={setSearchValue}></SearchBox>\n      </div>\n      <div className=\"row\">\n        <MovieList movies={movies} handleFavouriteClick={addFavoriteMovie} fav={true} ></MovieList>\n        {/* <Movie></Movie> */}\n      </div>\n\n      <div className=\"row d-flex align-items-center\">\n        <MovieListHeading heading=\"Favourites\"></MovieListHeading>\n\n      </div>\n      <div className=\"row\">\n        <MovieList movies={favourites} handleremoveFavouriteClick={removeFavouriteMovie} fav={false} ></MovieList>\n      </div>\n\n    </div>\n  );\n}\n\nexport default App;\n","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\reportWebVitals.js",[],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\MovieList.js",[],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\Movie.js",["45","46","47"],"import React, { Component, Fragment } from 'react'\r\nimport { Dialog, DialogContent, DialogTitle, Grid, IconButton, Tooltip, Typography, withStyles } from '@material-ui/core'\r\nimport { Close, ExpandMore } from '@material-ui/icons'\r\n\r\n\r\n\r\nclass Movie extends Component {\r\n\r\n    state = {\r\n        open: false,\r\n        movieDetails: {},\r\n\r\n    }\r\n    handleClose = () => {\r\n        this.setState({ open: false })\r\n    }\r\n    handleOpen = () => {\r\n        this.setState({ open: true });\r\n        console.log(this.props.movie);\r\n        this.getMovieDetails(this.props.movie.imdbID);\r\n\r\n    }\r\n    getMovieDetails = async (movieId) => {\r\n        const url = `http://www.omdbapi.com/?i=${movieId}&apikey=f441d06c`;\r\n        const response = await fetch(url);\r\n        const responseJson = await response.json();\r\n        this.setState({ movieDetails: responseJson });\r\n        console.log(this.state);\r\n    }\r\n    dialog = ({\r\n        background: \"black\",\r\n        position: \"relative\",\r\n    })\r\n    render() {\r\n        const { Title, Year, ImdbID, Type, Poster } = this.props.movie;\r\n        const {\r\n\r\n            Rated,\r\n            Language,\r\n            Genre,\r\n            Writer,\r\n            Director,\r\n            Actors,\r\n            BoxOffice,\r\n            Episode,\r\n            Season,\r\n            Plot,\r\n            Runtime,\r\n            Awards,\r\n        } = this.state.movieDetails;\r\n\r\n        return (\r\n            <Fragment >\r\n                <Tooltip title=\"movie details\">\r\n                    <IconButton onClick={this.handleOpen} color=\"primary\">\r\n                        <ExpandMore></ExpandMore>\r\n                    </IconButton>\r\n                </Tooltip>\r\n                <Dialog open={this.state.open} onClose={this.handleClose} fullWidth >\r\n                    <DialogTitle title=\"Movies Details\" style={{ alignContent: 'center', padding: '20', color: \"white\", background: \"rgba(0,0,0,0.8)\" }}>\r\n                        Movie Details\r\n                        <Tooltip title=\"close\">\r\n                            <IconButton onClick={this.handleClose} className=\"float-right\" color=\"secondary\">\r\n                                <Close></Close>\r\n                            </IconButton>\r\n                        </Tooltip>\r\n                    </DialogTitle>\r\n                    <DialogContent style={{ alignContent: 'center', padding: '20', color: \"white\", background: \"rgba(0,0,0,0.8)\" }} >\r\n                        <Grid container sm={12}>\r\n                            <Grid item sm={5}>\r\n                                <img src={Poster} alt=\"movie\" width={200} height={300}></img>\r\n\r\n                            </Grid>\r\n                            <Grid item sm={7}>\r\n                                <Typography variant=\"h5\" color=\"primary\"> <a href={`https://www.google.com/search?q=${Title}`} target=\"_blank\" rel=\"noreferrer\">{Title}</a></Typography>\r\n                                <Typography variant=\"body1\">{Year}</Typography>\r\n                                {Genre ? (<Typography variant=\"body1\">{Genre}</Typography>) : (null)}\r\n                                {Director ? (<Typography variant=\"body1\">Director: {Director}</Typography>) : (null)}\r\n                                {Language ? (<Typography variant=\"body1\">Language: {Language}</Typography>) : (null)}\r\n                                {Rated ? (<Typography variant=\"body1\">Rated: {Rated}</Typography>) : (null)}\r\n                                {Episode ? (<Typography variant=\"body1\">Episode: {Episode}</Typography>) : (null)}\r\n                                {Season ? (<Typography variant=\"body1\">Season: {Season}</Typography>) : (null)}\r\n                                {Actors ? (<Typography variant=\"body1\">Actors: {Actors}</Typography>) : (null)}\r\n                                {Runtime ? (<Typography variant=\"body1\">Duration: {Runtime}</Typography>) : (null)}\r\n                                <Typography variant=\"body1\">Awards: {Awards}</Typography>\r\n                                {BoxOffice ? (<Typography variant=\"body1\">Earnings: {BoxOffice}</Typography>) : (null)}\r\n\r\n                            </Grid>\r\n                            <br></br>\r\n                            <Typography variant=\"body2\">Writer: {Writer}</Typography>\r\n                            <Typography variant=\"body2\">Plot: {Plot}</Typography>\r\n\r\n                        </Grid>\r\n\r\n\r\n\r\n                    </DialogContent>\r\n                </Dialog>\r\n\r\n            </Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Movie\r\n","C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\MovieListHeading.js",[],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\SearchBox.js",[],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\AddFavorites.js",[],["48","49"],"C:\\Users\\hites\\Desktop\\socialMedia\\movies\\src\\components\\RemoveFavourites.js",[],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":9,"column":8,"nodeType":"56","messageId":"57","endLine":9,"endColumn":13},{"ruleId":"54","severity":1,"message":"58","line":2,"column":85,"nodeType":"56","messageId":"57","endLine":2,"endColumn":95},{"ruleId":"54","severity":1,"message":"59","line":35,"column":30,"nodeType":"56","messageId":"57","endLine":35,"endColumn":36},{"ruleId":"54","severity":1,"message":"60","line":35,"column":38,"nodeType":"56","messageId":"57","endLine":35,"endColumn":42},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'Movie' is defined but never used.","Identifier","unusedVar","'withStyles' is defined but never used.","'ImdbID' is assigned a value but never used.","'Type' is assigned a value but never used.",["63"],["64"],"no-global-assign","no-unsafe-negation"]